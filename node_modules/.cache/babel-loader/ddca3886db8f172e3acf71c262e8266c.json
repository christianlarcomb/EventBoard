{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Dropbox\\\\Code Playground\\\\FullStack Web [WebStorm]\\\\event-board\\\\src\\\\App.jsx\";\nimport React from 'react';\nimport './stylesheets/App.css';\nimport AppFeed from \"./components/app-feed.component\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentWillMount() {\n    this.webSocket = new WebSocket(\"ws://localhost:8080/\");\n  }\n\n  componentDidMount() {\n    /*\n    You need to wait for the handshake to finish before\n    trying to do anything with the backend.\n     */\n    this.webSocket.onopen = e => {\n      this.webSocket.send('Hello Server!');\n    };\n\n    this.webSocket.onmessage = e => {\n      console.log(e);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app-division\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(AppFeed, {\n      webSocket: this.webSocket,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"app-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"app-progress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/chris/Dropbox/Code Playground/FullStack Web [WebStorm]/event-board/src/App.jsx"],"names":["React","AppFeed","App","Component","constructor","props","state","componentWillMount","webSocket","WebSocket","componentDidMount","onopen","e","send","onmessage","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,OAAOC,OAAP,MAAoB,iCAApB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAE9BC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AAEA,SAAKC,KAAL,GACI,EADJ;AAKH;;AAEDC,EAAAA,kBAAkB,GAClB;AACI,SAAKC,SAAL,GAAiB,IAAIC,SAAJ,CAAc,sBAAd,CAAjB;AACH;;AAEDC,EAAAA,iBAAiB,GACjB;AAEI;;;;AAKA,SAAKF,SAAL,CAAeG,MAAf,GAAwBC,CAAC,IACzB;AACI,WAAKJ,SAAL,CAAeK,IAAf,CAAoB,eAApB;AACH,KAHD;;AAKA,SAAKL,SAAL,CAAeM,SAAf,GAA2BF,CAAC,IAC5B;AACIG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AACH,KAHD;AAKH;;AAEDK,EAAAA,MAAM,GAAE;AACJ,WAGQ;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAE,KAAKT,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAQI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CAHR;AAkBH;;AAzD6B;;AA6DlC,eAAeN,GAAf","sourcesContent":["import React from 'react';\nimport './stylesheets/App.css';\nimport AppFeed from \"./components/app-feed.component\";\n\nclass App extends React.Component {\n\n    constructor(props)\n    {\n        super(props);\n\n        this.state =\n            {\n\n            };\n\n    }\n\n    componentWillMount()\n    {\n        this.webSocket = new WebSocket(\"ws://localhost:8080/\");\n    }\n\n    componentDidMount()\n    {\n\n        /*\n        You need to wait for the handshake to finish before\n        trying to do anything with the backend.\n         */\n\n        this.webSocket.onopen = e =>\n        {\n            this.webSocket.send('Hello Server!');\n        };\n\n        this.webSocket.onmessage = e =>\n        {\n            console.log(e);\n        }\n\n    }\n\n    render(){\n        return (\n\n\n                <div className=\"app-division\">\n\n                    <AppFeed webSocket={this.webSocket} />\n\n                    <div className=\"app-center\">\n\n                    </div>\n\n                    <div className=\"app-progress\">\n\n                    </div>\n\n                </div>\n\n        );\n    }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}