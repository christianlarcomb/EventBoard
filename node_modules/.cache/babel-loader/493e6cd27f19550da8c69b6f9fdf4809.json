{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code Playground\\\\FullStack Web [WebStorm]\\\\event-board\\\\src\\\\components\\\\config-menu\\\\config-steps.component.jsx\";\nimport React from 'react';\nimport \"../../stylesheets/config-menu/config-steps.css\";\nimport \"../../stylesheets/config-menu/config-overlay.css\";\n\nclass ConfigurationMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.stepOneRender = () => {\n      /* If Step 1 is not completed yet... */\n      if (!this.state.step_one_completed) {\n        /* Configure Button */\n        return React.createElement(\"div\", {\n          className: \"sel-menu-cont top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"txt-32px txt-bld\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"step 1\"), React.createElement(\"button\", {\n          className: \"config-menu-button txt-18px\",\n          onClick: () => {\n            this.setState({\n              config_overlay_opened: true\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"configure\"));\n      } else {\n        /* Successfully Completed Button! */\n        return React.createElement(\"div\", {\n          className: \"sel-menu-cont top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"txt-32px txt-bld txt-clr-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"step 1\"), React.createElement(\"button\", {\n          className: \"config-menu-button-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"svg\", {\n          className: \"checkmark-sml\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 515.556 515.556\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"path\", {\n          fill: \"white\",\n          d: \"m0 274.226 176.549 176.886 339.007-338.672-48.67-47.997-290.337 290-128.553-128.552z\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }))));\n      }\n    };\n\n    this.overLayRender = () => {\n      return React.createElement(\"div\", {\n        className: `config-overlay-container ${this.state.config_overlay_opened ? 'view-enabled' : 'view-disabled'}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    };\n\n    this.stepTwoRender = () => {\n      /* If Step 1 is not completed yet... */\n      if (!this.state.step_one_completed) {\n        return React.createElement(\"div\", {\n          className: \"sel-menu-cont bot\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"txt-32px txt-bld txt-clr-disabled\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"step 2\"), React.createElement(\"div\", {\n          className: \"content-item-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"content-item-drag-grid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"content-item-emblem bknrd-disabled\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content-item-emblem bknrd-disabled\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content-item-emblem bknrd-disabled\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content-item-emblem bknrd-disabled\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content-item-emblem bknrd-disabled\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content-item-emblem bknrd-disabled\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"sel-menu-cont bot\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"txt-32px txt-bld\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"step 2\"), React.createElement(\"div\", {\n          className: \"content-item-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"content-item-drag-grid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"content-item-emblem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content-item-emblem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content-item-emblem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content-item-emblem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content-item-emblem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content-item-emblem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }))));\n      }\n    };\n\n    this.state = {\n      step_one_completed: false,\n      config_overlay_opened: false\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, \"/* The menu that will appear */\", this.overLayRender(), React.createElement(\"div\", {\n      className: \"sel-menu-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.stepOneRender(), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), this.stepTwoRender()));\n  }\n\n}\n\nexport default ConfigurationMenu;","map":{"version":3,"sources":["E:/Code Playground/FullStack Web [WebStorm]/event-board/src/components/config-menu/config-steps.component.jsx"],"names":["React","ConfigurationMenu","Component","constructor","props","stepOneRender","state","step_one_completed","setState","config_overlay_opened","overLayRender","stepTwoRender","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport \"../../stylesheets/config-menu/config-steps.css\"\r\nimport \"../../stylesheets/config-menu/config-overlay.css\"\r\n\r\nclass ConfigurationMenu extends React.Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state =\r\n            {\r\n                step_one_completed: false,\r\n                config_overlay_opened: false\r\n            }\r\n\r\n    }\r\n\r\n    stepOneRender = () =>\r\n    {\r\n        /* If Step 1 is not completed yet... */\r\n        if(!this.state.step_one_completed)\r\n        {\r\n            /* Configure Button */\r\n            return(\r\n                <div className=\"sel-menu-cont top\">\r\n                    <span className=\"txt-32px txt-bld\">step 1</span>\r\n\r\n                    <button className=\"config-menu-button txt-18px\" onClick={() => {this.setState({config_overlay_opened: true})}}>configure</button>\r\n\r\n                </div>\r\n            )\r\n\r\n        } else {\r\n            /* Successfully Completed Button! */\r\n            return(\r\n                <div className=\"sel-menu-cont top\">\r\n                    <span className=\"txt-32px txt-bld txt-clr-success\">step 1</span>\r\n\r\n                    <button className=\"config-menu-button-success\">\r\n\r\n                        <svg className=\"checkmark-sml\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 515.556 515.556\">\r\n                            <path fill=\"white\" d=\"m0 274.226 176.549 176.886 339.007-338.672-48.67-47.997-290.337 290-128.553-128.552z\"/>\r\n                        </svg>\r\n\r\n                    </button>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    overLayRender = () =>\r\n    {\r\n\r\n            return (\r\n                <div className={`config-overlay-container ${this.state.config_overlay_opened ? 'view-enabled' : 'view-disabled'}`}>\r\n\r\n\r\n                </div>\r\n            )\r\n\r\n    };\r\n\r\n    /* Renders the enabled or disabled drag and drop config-menu */\r\n    stepTwoRender = () =>\r\n    {\r\n\r\n        /* If Step 1 is not completed yet... */\r\n      if(!this.state.step_one_completed)\r\n      {\r\n\r\n          return(\r\n              <div className=\"sel-menu-cont bot\">\r\n                  <span className=\"txt-32px txt-bld txt-clr-disabled\">step 2</span>\r\n\r\n                  <div className=\"content-item-container\">\r\n\r\n                      <div className=\"content-item-drag-grid\">\r\n\r\n                          <div className=\"content-item-emblem bknrd-disabled\"/>\r\n                          <div className=\"content-item-emblem bknrd-disabled\"/>\r\n                          <div className=\"content-item-emblem bknrd-disabled\"/>\r\n                          <div className=\"content-item-emblem bknrd-disabled\"/>\r\n                          <div className=\"content-item-emblem bknrd-disabled\"/>\r\n                          <div className=\"content-item-emblem bknrd-disabled\"/>\r\n\r\n                      </div>\r\n\r\n                  </div>\r\n\r\n              </div>\r\n          )\r\n\r\n      } else {\r\n\r\n          return(\r\n              <div className=\"sel-menu-cont bot\">\r\n                  <span className=\"txt-32px txt-bld\">step 2</span>\r\n\r\n                  <div className=\"content-item-container\">\r\n\r\n                      <div className=\"content-item-drag-grid\">\r\n\r\n                          <div className=\"content-item-emblem\"/>\r\n                          <div className=\"content-item-emblem\"/>\r\n                          <div className=\"content-item-emblem\"/>\r\n                          <div className=\"content-item-emblem\"/>\r\n                          <div className=\"content-item-emblem\"/>\r\n                          <div className=\"content-item-emblem\"/>\r\n\r\n                      </div>\r\n\r\n                  </div>\r\n\r\n              </div>\r\n          )\r\n      }\r\n    };\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <>\r\n\r\n                /* The menu that will appear */\r\n                { this.overLayRender() }\r\n\r\n                <div className=\"sel-menu-wrapper\">\r\n\r\n                    { this.stepOneRender() }\r\n\r\n                    <br/>\r\n\r\n                    { this.stepTwoRender() }\r\n\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ConfigurationMenu;"]},"metadata":{},"sourceType":"module"}